{
  "openapi": "3.0.3",
  "info": {
    "title": "LogoKit Logo API",
    "version": "1.0.0",
    "description": "The LogoKit Logo API allows you to retrieve company logos by domain, providing high-quality PNG images via hotlinking. Supports fallback options and attribution for free users."
  },
  "servers": [
    {
      "url": "https://img.logokit.com"
    }
  ],
  "paths": {
    "/{domain}": {
      "get": {
        "summary": "Retrieve logo by domain",
        "description": "Returns the logo for the specified domain as a PNG image. Free users: 64x64px. Paid users: 128x128px. Caching or local storage of images is not supported.",
        "operationId": "getLogoDomain",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "apple.com"
            },
            "description": "The domain for which to retrieve the logo."
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "<publishable-api-token>"
            },
            "description": "Publishable API token for authentication."
          },
          {
            "name": "fallback",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["monogram", "404"],
              "default": "monogram"
            },
            "example": "monogram",
            "description": "Fallback behavior if the logo is not available. 'monogram': Returns a monogram image from the first letter of the domain (default). '404': Returns a 404 HTTP error."
          }
        ],
        "responses": {
          "200": {
            "description": "Logo image found and returned as PNG.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Logo not found (only if `fallback=404` is used)."
          },
          "401": {
            "description": "Invalid or missing API token."
          },
          "429": {
            "description": "Rate limit exceeded."
          }
        },
        "tags": ["Logo API"]
      }
    },
    "/ticker/{symbol}": {
      "get": {
        "summary": "Retrieve logo by stock ticker symbol",
        "description": "Returns the logo for the specified stock ticker as a PNG image. Free users: 64x64px. Paid users: 128x128px. Caching or local storage of images is not supported.",
        "operationId": "getLogoTicker",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AAPL"
            },
            "description": "The stock ticker symbol for which to retrieve the logo."
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "<publishable-api-token>"
            },
            "description": "Publishable API token for authentication."
          },
          {
            "name": "fallback",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["monogram", "404"],
              "default": "monogram"
            },
            "example": "monogram",
            "description": "Fallback behavior if the logo is not available. 'monogram': Returns a monogram image from the first letter of the symbol (default). '404': Returns a 404 HTTP error."
          }
        ],
        "responses": {
          "200": {
            "description": "Logo image found and returned as PNG.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Logo not found (only if `fallback=404` is used)."
          },
          "401": {
            "description": "Invalid or missing API token."
          },
          "429": {
            "description": "Rate limit exceeded."
          }
        },
        "tags": ["Stock Logo API"]
      }
    },
    "/crypto/{symbol}": {
      "get": {
        "summary": "Retrieve logo by cryptocurrency symbol",
        "description": "Returns the logo for the specified cryptocurrency as a PNG image. Free users: 64x64px. Paid users: 128x128px. Caching or local storage of images is not supported.",
        "operationId": "getLogoCrypto",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            },
            "description": "The cryptocurrency symbol for which to retrieve the logo."
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "<publishable-api-token>"
            },
            "description": "Publishable API token for authentication."
          },
          {
            "name": "fallback",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["monogram", "404"],
              "default": "monogram"
            },
            "example": "monogram",
            "description": "Fallback behavior if the logo is not available. 'monogram': Returns a monogram image from the first letter of the symbol (default). '404': Returns a 404 HTTP error."
          }
        ],
        "responses": {
          "200": {
            "description": "Logo image found and returned as PNG.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Logo not found (only if `fallback=404` is used)."
          },
          "401": {
            "description": "Invalid or missing API token."
          },
          "429": {
            "description": "Rate limit exceeded."
          }
        },
        "tags": ["Crypto Logo API"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "token"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Logo API",
      "description": "Operations for retrieving company logos by domain"
    },
    {
      "name": "Stock Logo API",
      "description": "Operations for retrieving logos by stock ticker symbols"
    },
    {
      "name": "Crypto Logo API",
      "description": "Operations for retrieving logos by cryptocurrency symbols"
    }
  ],
  "externalDocs": {
    "description": "LogoKit Documentation",
    "url": "https://docs.logokit.com"
  }
}
